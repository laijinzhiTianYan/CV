/* 水平垂直居中的方式 */
/* 1 */
div {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* 2 */
.parent {
    position: relative;
}

.children {
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

/* 3 */
.parent {
    position: relative;
}

.child {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

/* 4 */
/* html代码
<div class="box">
    <div class="content">
        <div class="inner"></div>
    </div>
</div>
 */
.box {
    display: table;
    height: 100%;
    width: 100%;
}

.content {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
}

.inner {
    background-color: aqua;
    display: inline-block;
    width: 200px;
    height: 200px;
}

/* 文本超出部分使用省略号 */
/* 单行 */
div {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    /* 文本不会换行，文本会在同一行上继续，直到遇到 <br> 标签为止。 */
}

/* 多行 使用了WebKit的CSS扩展属性，该方法适用于WebKit浏览器及移动端；*/
div {
    display: -webkit-box;
    /* 将对象作为弹性伸缩盒子模型显示 */
    -webkit-box-orient: vertical;
    /* 设置或检索伸缩盒对象的子元素的排列方式  */
    -webkit-line-clamp: 3;
    /* 最多显示几行 */
    overflow: hidden;
}

/* 画三角 */
.info-tab {
    position: relative;
}

.info-tab::after {
    content: '';
    border: 4px solid transparent;
    border-top-color: #2c8ac2;
    position: absolute;
    top: 0;
}

/* 或者，精简版 */
.info-tab {
    width: 0px;
    height: 0px;
    border: 10px solid transparent;
    border-top-color: #2c8ac2;
}

/* 或者 */
.triangle {
    width: 0;
    height: 0;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
    border-bottom: 100px solid red;
}

/* 还可以画出左上和左下右上和右下 */
.triangle {
    width: 0;
    height: 0;
    border-top: 100px solid red;
    border-right: 100px solid transparent;
    /* border-left: 100px solid transparent;右上  */
    /* 
    border-bottom: 100px solid red;
    border-right: 100px solid transparent;左下
    border-left: 100px solid transparent;右下
    */
}






/* css实现瀑布流布局 */
/* html代码
 <body>
    <div class="waterfall-container">
        <div class="waterfall-item" style="height: 100px">1</div>
        <div class="waterfall-item" style="height: 300px">2</div>
        <div class="waterfall-item" style="height: 400px">3</div>
        <div class="waterfall-item" style="height: 100px">4</div>
        <div class="waterfall-item" style="height: 300px">5</div>
        <div class="waterfall-item" style="height: 600px">6</div>
        <div class="waterfall-item" style="height: 400px">7</div>
        <div class="waterfall-item" style="height: 300px">8</div>
        <div class="waterfall-item" style="height: 700px">9</div>
        <div class="waterfall-item" style="height: 100px">10</div>
    </div>
</body>
 */
body {
    margin: 0;
}

.waterfall-container {
    /* 分为几列 */
    column-count: 2;
    width: 100%;
    /* 列间距 */
    column-gap: 10px;
}

.waterfall-item {
    break-inside: avoid;
    /* 避免中断？？？ */
    width: 100%;
    height: 100px;
    margin-bottom: 10px;
    background: #ddd;
    column-gap: 0;
    text-align: center;
    color: #fff;
    font-size: 40px;
    ;
}

/* 容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。
这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。 
*/
/* 
    <div class="news">
        <img src="https://img2020.cnblogs.com/blog/1991534/202004/1991534-20200406225318509-2024381457.png" />
        <p>这是一段文案</p>
    </div>
.news {
  background-color: gray;
  border: solid 1px black;
}
.news img {
  float: left;
}
.news p {
  float: right;
}
需要清除浮动
 */


/*  1. 使用带clear属性的空元素：在浮动元素后使用一个空元素 
    <div class="news">
        <img src="https://img2020.cnblogs.com/blog/1991534/202004/1991534-20200406225318509-2024381457.png" />
        <p>这是一段文案</p>
        <div class="clear"></div>
    </div>
*/
.news {
    background-color: gray;
    border: solid 1px black;
}

.news img {
    float: left;
}

.news p {
    float: right;
}

.clear {
    clear: both;
}

/* 2. 使用CSS的:after伪元素
    <div class="news clearfix">
        <img src="https://img2020.cnblogs.com/blog/1991534/202004/1991534-20200406225318509-2024381457.png" />
        <p>some text</p>
    </div> 
*/
.news {
    background-color: gray;
    border: solid 1px black;
}

.news img {
    float: left;
}

.news p {
    float: right;
}

.clearfix:after {
    content: "";
    display: block;
    clear: both;
    /* height: 0;
    visibility: hidden; */
}

.clearfix {
    /* 触发 hasLayout */
    zoom: 1;
}

/* 3. 使用overflow 
<div class="news">
  <img src="http://damonare.cn/logo.png" />
  <p>这是一段文案</p>
</div>
*/
.news {
    background-color: gray;
    border: solid 1px black;
    overflow: hidden;
    /* 或者 overflow:auto; */
    *zoom: 1;
    /* 兼容ie6 */
}

.news img {
    float: left;
}

.news p {
    float: right;
}

/* 4. 使用float
<div class="news">
  <img src="http://damonare.cn/logo.png" />
  <p>这是一段文案</p>
</div>
给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，也可以酌情使用；
 */
.news {
    background-color: gray;
    border: solid 1px black;
    float: left;
}

.news img {
    float: left;
}

.news p {
    float: right;
}

/* 5. 使用position
<div class="news">
  <img src="http://damonare.cn/logo.png" />
  <p>这是一段文案</p>
</div>
*/
.news {
    background-color: gray;
    border: solid 1px black;
    position: absolute;
    /** 或fixed**/
}

.news img {
    float: left;
}

.news p {
    float: right;
}

/* 6. 使用display
<div class="news">
  <img src="http://damonare.cn/logo.png" />
  <p>这是一段文案</p>
</div>
使用display，将其设置为inline-block也可以清除浮动，该方法是比较通用，也比较简单的一种
*/
.news {
    background-color: gray;
    border: solid 1px black;
    display: inline-block;
}

.news img {
    float: left;
}

.news p {
    float: right;
}